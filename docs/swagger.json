{
    "swagger": "2.0",
    "info": {
        "description": "This is a server for Kuro API",
        "title": "Bookify",
        "contact": {
            "name": "API Support",
            "email": "hoaiphong01012002@gmail.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/activity-logs/get/all": {
            "get": {
                "description": "Retrieve a list of all activity log.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activity Logs"
                ],
                "summary": "Get all activity log",
                "responses": {}
            }
        },
        "/api/v1/activity-logs/get/id": {
            "get": {
                "description": "Retrieve details of an activity using its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activity Logs"
                ],
                "summary": "Get Activity by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity Log ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/activity-logs/get/level": {
            "get": {
                "description": "Retrieve details of an organization using its Level.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activity Logs"
                ],
                "summary": "Get organization by level",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity Level",
                        "name": "level",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/activity-logs/get/user_id": {
            "get": {
                "description": "Retrieve details of an activity using its user id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activity Logs"
                ],
                "summary": "Get Activity by ID",
                "responses": {}
            }
        },
        "/api/v1/casbin/add/api/role": {
            "post": {
                "description": "Add APIs with specific methods to a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Assign API permissions to a role",
                "parameters": [
                    {
                        "description": "Role and API data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RoleData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/add/role": {
            "post": {
                "description": "Add a new role with API and method to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Add a role to the system",
                "parameters": [
                    {
                        "description": "Role data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RoleData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/add/role/api": {
            "post": {
                "description": "Add role-based permissions for a specific API and method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Add role permissions for an API",
                "parameters": [
                    {
                        "description": "API data with Role and Methods",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.APIData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/add/user": {
            "post": {
                "description": "Assign a role to a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Add a role to a user",
                "parameters": [
                    {
                        "description": "User and Role data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UserRole"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/delete": {
            "delete": {
                "description": "Delete a role from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Delete a role",
                "parameters": [
                    {
                        "description": "Role data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.Role"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/delete/api/role": {
            "delete": {
                "description": "Remove role-based permissions for an API and method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Delete role permissions for an API",
                "parameters": [
                    {
                        "description": "API and Role data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.APIRole"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/delete/role/api": {
            "delete": {
                "description": "Remove APIs with specific methods for a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Delete API for a role",
                "parameters": [
                    {
                        "description": "Role and API data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RoleAPI"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/casbin/delete/user": {
            "delete": {
                "description": "Remove a specific role from a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Casbin"
                ],
                "summary": "Delete role for a user",
                "parameters": [
                    {
                        "description": "User ID and Role data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UserRole"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/employees/create": {
            "post": {
                "description": "Create a new employee record for a specific organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Create a new employee",
                "parameters": [
                    {
                        "description": "Employee details",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EmployeeInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/employees/delete": {
            "delete": {
                "description": "Delete an employee record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Delete an employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/employees/delete-soft": {
            "patch": {
                "description": "Delete an employee record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Delete an employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/employees/get/all": {
            "get": {
                "description": "Retrieve all employee records",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Get all employees",
                "responses": {}
            }
        },
        "/api/v1/employees/get/id": {
            "get": {
                "description": "Retrieve an employee record by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Get an employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/employees/restore": {
            "delete": {
                "description": "Restore an employee record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Restore an employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/employees/update": {
            "put": {
                "description": "Update an employee record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Update an employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Updated employee details",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EmployeeInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-discount/create": {
            "post": {
                "description": "Creates a new event discount for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Discounts"
                ],
                "summary": "Create a new event discount",
                "parameters": [
                    {
                        "description": "Event discount Body",
                        "name": "discount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventDiscountInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-discount/delete": {
            "delete": {
                "description": "Deletes an event discount by ID for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Discounts"
                ],
                "summary": "Delete an event discount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Discount ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-discount/get/id": {
            "get": {
                "description": "Retrieves the details of an event discount by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Discounts"
                ],
                "summary": "Get event discount by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Discount ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event-discount/update": {
            "put": {
                "description": "Updates an existing event discount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Discounts"
                ],
                "summary": "Update an event discount",
                "parameters": [
                    {
                        "description": "Event Discount Body",
                        "name": "eventDiscount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventDiscount"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-discounts/get/all": {
            "get": {
                "description": "Retrieves a list of all event discounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Discounts"
                ],
                "summary": "Get all event discount",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event-employee/create": {
            "post": {
                "description": "Creates a new event employee for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Employees"
                ],
                "summary": "Create a new event employee",
                "parameters": [
                    {
                        "description": "Event Employee Body",
                        "name": "eventEmployee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventEmployeeInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-employees/delete": {
            "delete": {
                "description": "Deletes an event employee by ID for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Employees"
                ],
                "summary": "Delete an event employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Type ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-employees/get/all": {
            "get": {
                "description": "Retrieves a list of all event employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Employees"
                ],
                "summary": "Get all event employee",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event-employees/get/id": {
            "get": {
                "description": "Retrieves the details of an event employee by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Employees"
                ],
                "summary": "Get event employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Employee ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event-employees/update": {
            "put": {
                "description": "Updates an existing event employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Employees"
                ],
                "summary": "Update an event employee",
                "parameters": [
                    {
                        "description": "Event Employee Body",
                        "name": "eventEmployee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventEmployeeInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-partners/create": {
            "post": {
                "description": "Creates a new event type for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Partners"
                ],
                "summary": "Create a new event partner",
                "parameters": [
                    {
                        "description": "Event Partner Body",
                        "name": "eventPartner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventPartnerInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-partners/delete": {
            "delete": {
                "description": "Deletes an event partner by ID for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Partners"
                ],
                "summary": "Delete an event partner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Partner ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-partners/get/all": {
            "get": {
                "description": "Retrieves a list of all event partner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Partners"
                ],
                "summary": "Get all event partner",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event-partners/get/id": {
            "get": {
                "description": "Retrieves the details of an event partner by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Partners"
                ],
                "summary": "Get event partner by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Partner ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event-partners/update": {
            "put": {
                "description": "Updates an existing event partner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Partners"
                ],
                "summary": "Update an event partner",
                "parameters": [
                    {
                        "description": "Event Partner Body",
                        "name": "eventPartner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventPartnerInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-ticket-assignment/delete": {
            "delete": {
                "description": "Deletes an event ticket assignment by ID for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Ticket Assignments"
                ],
                "summary": "Delete an event ticket assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Ticket Assignment ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-ticket-assignments/create": {
            "post": {
                "description": "Creates a new event ticket assignment for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Ticket Assignments"
                ],
                "summary": "Create a new event ticket assignment",
                "parameters": [
                    {
                        "description": "Event Ticket Assignment Body",
                        "name": "eventTicketAssignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventTicketAssignmentInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-ticket-assignments/get/all": {
            "get": {
                "description": "Retrieves a list of all event ticket assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Ticket Assignments"
                ],
                "summary": "Get all event ticket assignment",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event-ticket-assignments/get/id": {
            "get": {
                "description": "Retrieves the details of an event ticket assignment by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Ticket Assignments"
                ],
                "summary": "Get event ticket assignment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Ticket Assignment ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event-ticket-assignments/statistics-revenue/event_id": {
            "get": {
                "description": "This API returns the total revenue of an event based on its Event ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Ticket Assignments"
                ],
                "summary": "Revenue statistics by Event ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the event to retrieve revenue statistics",
                        "name": "event_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-ticket-assignments/update": {
            "put": {
                "description": "Updates an existing event ticket assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Ticket Assignments"
                ],
                "summary": "Update an event ticket assignment",
                "parameters": [
                    {
                        "description": "Event Ticket Assignment Body",
                        "name": "eventTicketAssignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventTicketAssignmentInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-tickets/create": {
            "post": {
                "description": "Creates a new event ticket for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Tickets"
                ],
                "summary": "Create a new event ticket",
                "parameters": [
                    {
                        "description": "Event Ticket Body",
                        "name": "eventTickets",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventTicket"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-tickets/delete": {
            "delete": {
                "description": "Deletes an event ticket by ID for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Tickets"
                ],
                "summary": "Delete an event ticket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Tickets ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-tickets/get/all": {
            "get": {
                "description": "Retrieves a list of all event tickets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Tickets"
                ],
                "summary": "Get all event tickets",
                "responses": {}
            }
        },
        "/api/v1/event-tickets/get/id": {
            "get": {
                "description": "Retrieves the details of an event tickets by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Tickets"
                ],
                "summary": "Get event tickets by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Ticket ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-tickets/update": {
            "put": {
                "description": "Updates an existing event ticket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Tickets"
                ],
                "summary": "Update an event ticket",
                "parameters": [
                    {
                        "description": "Event Ticket Body",
                        "name": "eventTicket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventTicket"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-types/create": {
            "post": {
                "description": "Creates a new event type for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Types"
                ],
                "summary": "Create a new event type",
                "parameters": [
                    {
                        "description": "Event Type Body",
                        "name": "eventType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventTypeInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-types/delete": {
            "delete": {
                "description": "Deletes an event type by ID for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Types"
                ],
                "summary": "Delete an event type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Type ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-types/get/all": {
            "get": {
                "description": "Retrieves a list of all event types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Types"
                ],
                "summary": "Get all event types",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event-types/get/id": {
            "get": {
                "description": "Retrieves the details of an event type by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Types"
                ],
                "summary": "Get event type by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Type ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event-types/get/name": {
            "get": {
                "description": "Retrieves the details of an event type by its Name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Types"
                ],
                "summary": "Get event type by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Type Name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event-types/update": {
            "put": {
                "description": "Updates an existing event type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Types"
                ],
                "summary": "Update an event type",
                "parameters": [
                    {
                        "description": "Event Type Body",
                        "name": "eventType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventTypeInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-wishlist/update": {
            "put": {
                "description": "Updates an existing event wishlists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Wishlists"
                ],
                "summary": "Update an event wishlists",
                "parameters": [
                    {
                        "description": "Event Wishlist Body",
                        "name": "eventWishlist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventWishlistInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-wishlists/create": {
            "post": {
                "description": "Creates a new event wishlist for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Wishlists"
                ],
                "summary": "Create a new event wishlist",
                "parameters": [
                    {
                        "description": "Event Wishlist Body",
                        "name": "eventWishlist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventWishlist"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-wishlists/delete": {
            "delete": {
                "description": "Deletes an event wishlist by ID for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Wishlists"
                ],
                "summary": "Delete an event wishlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Wishlist ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/event-wishlists/get/all": {
            "get": {
                "description": "Retrieves a list of all event wishlists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Wishlists"
                ],
                "summary": "Get all event wishlist",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event-wishlists/get/id": {
            "get": {
                "description": "Retrieves the details of an event wishlist by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Wishlists"
                ],
                "summary": "Get event wishlist by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event Wishlists ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/events/create": {
            "post": {
                "description": "Add a new event to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "parameters": [
                    {
                        "description": "Event input data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/events/create/async": {
            "post": {
                "description": "Add a new event to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "parameters": [
                    {
                        "description": "Event input data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/events/delete-one": {
            "delete": {
                "description": "Delete an event by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/events/get-all/pagination": {
            "get": {
                "description": "Get a paginated list of all event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Get all event with pagination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page number, default is 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/events/get/all": {
            "get": {
                "description": "Get a list of all event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Get all event",
                "responses": {}
            }
        },
        "/api/v1/events/get/id": {
            "get": {
                "description": "Get details of an event by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Get event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/events/get/start-time": {
            "get": {
                "description": "Get event starting from a specific date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Get event by start time",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "startDate",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/events/get/start-time/pagination": {
            "get": {
                "description": "Get paginated event starting from a specific date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Get event by start time with pagination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "startDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page number, default is 1",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/events/get/title": {
            "get": {
                "description": "Get details of an event by title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Get event by title",
                "responses": {}
            }
        },
        "/api/v1/events/get/user_id": {
            "get": {
                "description": "Get details of an event by its User ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Get event by UserID",
                "responses": {}
            }
        },
        "/api/v1/events/get/user_id/start_time": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve event details for a specific user based on User ID and Start Time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Get events by User ID and Start Time",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Time (ISO 8601 format)",
                        "name": "start_time",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/events/update": {
            "put": {
                "description": "Update details of an existing event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Event input data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.EventInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/events/update/image": {
            "patch": {
                "description": "Update details of an existing event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/organizations/create": {
            "post": {
                "description": "Creates a new organization for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Create a new organization",
                "parameters": [
                    {
                        "description": "Organization Input Body",
                        "name": "eventType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.OrganizationInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/organizations/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a specific organization by ID. User must be logged in.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Delete an organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/organizations/get/all": {
            "get": {
                "description": "Retrieve a list of all organizations.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Get all organizations",
                "responses": {}
            }
        },
        "/api/v1/organizations/get/id": {
            "get": {
                "description": "Retrieve details of an organization using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Get organization by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/organizations/get/user_id": {
            "get": {
                "description": "Retrieve details of an organization using its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Get organization by ID",
                "responses": {}
            }
        },
        "/api/v1/organizations/update": {
            "put": {
                "description": "Update details of an organization by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Update an organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Organization data",
                        "name": "OrganizationInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.OrganizationInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/partners/create": {
            "post": {
                "description": "Create a new partner in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partners"
                ],
                "summary": "Create a new partner",
                "parameters": [
                    {
                        "description": "Partner Input Data",
                        "name": "partnerInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.PartnerInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/partners/delete": {
            "delete": {
                "description": "Delete a partner from the system using the partner ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partners"
                ],
                "summary": "Delete a partner by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/partners/get/all": {
            "get": {
                "description": "Retrieve a list of all partners from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partners"
                ],
                "summary": "Get a list of all partners",
                "responses": {}
            }
        },
        "/api/v1/partners/get/id": {
            "get": {
                "description": "Retrieve a partner from the system using the partner's ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partners"
                ],
                "summary": "Get a partner by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/partners/update": {
            "put": {
                "description": "Update the details of a partner using the partner's ID and input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "partners"
                ],
                "summary": "Update a partner by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partner ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Partner data",
                        "name": "partnerInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.PartnerInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/user/update/profile": {
            "patch": {
                "description": "Update the profile information of the currently logged-in user",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Full name of the user",
                        "name": "full_name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Gender of the user",
                        "name": "gender",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Vocation or profession",
                        "name": "vocation",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Address of the user",
                        "name": "address",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "City of residence",
                        "name": "city",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Region or state",
                        "name": "region",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Date of birth in YYYY-MM-DD format",
                        "name": "date_of_birth",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Show interests in profile (true/false)",
                        "name": "show_interest",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Enable social media sharing (true/false)",
                        "name": "social_media",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Profile picture file",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/delete": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Deletes the user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete User Information",
                "responses": {}
            }
        },
        "/api/v1/users/forget": {
            "post": {
                "description": "Sends an email with a verification code for password reset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User forget password",
                "parameters": [
                    {
                        "description": "Forget password input",
                        "name": "forgetInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ForgetPassword"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/get/info": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Retrieves the user's information using the access token stored in cookies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User Information",
                "responses": {}
            }
        },
        "/api/v1/users/get/refresh": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Refresh the user's access token using a valid refresh token stored in cookies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Refresh Access Token",
                "responses": {}
            }
        },
        "/api/v1/users/google/callback": {
            "get": {
                "description": "Login the user's google, but the function not use with swagger.",
                "tags": [
                    "User"
                ],
                "summary": "Login Google",
                "responses": {}
            }
        },
        "/api/v1/users/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "LoginUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SignIn"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/logout": {
            "get": {
                "description": "Logout the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Logout user",
                "responses": {}
            }
        },
        "/api/v1/users/password/forget": {
            "patch": {
                "description": "Allows the user to change their password after verifying the code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "description": "Change password input",
                        "name": "changePasswordInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ChangePasswordInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/signup": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new user with form data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "SignUp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SignupUser"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates the user's first name, last name, and username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User Information",
                "responses": {}
            }
        },
        "/api/v1/users/update/image": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Updates the user's first name, last name, and username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User Information",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/update/profile/non-image": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update profile user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update profile user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "UpdateUserProfileNotImage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateUserSettings"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/update/social": {
            "patch": {
                "description": "Allows the logged-in user to update their social media links",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update social media links of the current user",
                "parameters": [
                    {
                        "description": "Social media update payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateSocialMedia"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/verify": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new user with form data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.VerificationInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/verify/password": {
            "patch": {
                "description": "Verifies the code sent to the user's email for changing password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Verify code for password change",
                "parameters": [
                    {
                        "description": "Verification code input",
                        "name": "verificationCode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.VerificationInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/venues/create": {
            "post": {
                "description": "Create a new venue using the provided input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Venues"
                ],
                "summary": "Create a new venue",
                "parameters": [
                    {
                        "description": "Venue input data",
                        "name": "venueInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.VenueInput"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/venues/delete": {
            "delete": {
                "description": "Delete a venue by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Venues"
                ],
                "summary": "Delete a venue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Venue ID to delete",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/venues/get/all": {
            "get": {
                "description": "Retrieve a list of all venues",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Venues"
                ],
                "summary": "Get all venues",
                "responses": {}
            }
        },
        "/api/v1/venues/get/id": {
            "get": {
                "description": "Retrieve a venue by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Venues"
                ],
                "summary": "Get venue by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Venue ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/venues/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the details of a specific venue by providing venue data and the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Venues"
                ],
                "summary": "Update venue details",
                "parameters": [
                    {
                        "description": "Venue data to update",
                        "name": "venueInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.VenueInput"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "domain.ChangePasswordInput": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "password_compare": {
                    "type": "string"
                }
            }
        },
        "domain.EmployeeInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "job_title": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                }
            }
        },
        "domain.EventDiscount": {
            "type": "object",
            "properties": {
                "applicable_users": {
                    "description": "User được chọn",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "discount_unit": {
                    "type": "string"
                },
                "discount_value": {
                    "type": "number"
                },
                "end_date": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "who_created": {
                    "type": "string"
                }
            }
        },
        "domain.EventDiscountInput": {
            "type": "object",
            "properties": {
                "applicable_users": {
                    "description": "User được chọn",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "date_created": {
                    "type": "string"
                },
                "discount_unit": {
                    "type": "string"
                },
                "discount_value": {
                    "type": "number"
                },
                "end_date": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "domain.EventEmployeeInput": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "employeeID": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "important_level": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "task": {
                    "type": "string"
                },
                "task_completed": {
                    "type": "boolean"
                },
                "task_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "who_created": {
                    "type": "string"
                }
            }
        },
        "domain.EventInput": {
            "type": "object",
            "properties": {
                "actual_attendee": {
                    "type": "integer"
                },
                "address_line": {
                    "type": "string"
                },
                "asset_url": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "estimated_attendee": {
                    "type": "integer"
                },
                "event_mode": {
                    "type": "string"
                },
                "event_type_name": {
                    "type": "string"
                },
                "from_attend": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "link_attend": {
                    "type": "string"
                },
                "mode": {
                    "description": "Public, Friend and Group, Invite Only",
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "short_description": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "total_expenditure": {
                    "type": "number"
                }
            }
        },
        "domain.EventPartnerInput": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "partner_id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "domain.EventTicket": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "number"
                },
                "status": {
                    "description": "Trạng thái vé - automatic (available, sold_out, expired, canceled, pending, reserved)",
                    "type": "string"
                }
            }
        },
        "domain.EventTicketAssignmentInput": {
            "type": "object",
            "properties": {
                "attendance_id": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "expiry_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "purchase_date": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "status": {
                    "description": "use, useless",
                    "type": "string"
                },
                "ticket_type": {
                    "type": "string"
                }
            }
        },
        "domain.EventTypeInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.EventWishlist": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.EventWishlistInput": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.ForgetPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "domain.OrganizationInput": {
            "type": "object",
            "properties": {
                "contact_person": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.PartnerInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "domain.SignIn": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin@admin.com"
                },
                "password": {
                    "type": "string",
                    "example": "12345"
                }
            }
        },
        "domain.SignupUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "description": "Hash of the password",
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "domain.UpdateSocialMedia": {
            "type": "object",
            "properties": {
                "enable_automatic_sharing_of_events": {
                    "type": "boolean"
                },
                "enable_sharing_on": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "facebook_sc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instagram_sc": {
                    "type": "string"
                },
                "linked_in_sc": {
                    "type": "string"
                },
                "youtube_sc": {
                    "type": "string"
                }
            }
        },
        "domain.UpdateUserSettings": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "show_interest": {
                    "type": "boolean"
                },
                "social_media": {
                    "type": "boolean"
                },
                "vocation": {
                    "type": "string"
                }
            }
        },
        "domain.VenueInput": {
            "type": "object",
            "properties": {
                "address_line": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "event_mode": {
                    "type": "string"
                },
                "from_attend": {
                    "type": "string"
                },
                "link_attend": {
                    "type": "string"
                }
            }
        },
        "domain.VerificationInput": {
            "type": "object",
            "properties": {
                "verification_code": {
                    "type": "string"
                }
            }
        },
        "handler.APIData": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "string"
                },
                "method": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handler.APIRole": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "string"
                },
                "role": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handler.Role": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                }
            }
        },
        "handler.RoleAPI": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "handler.RoleData": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "GET",
                        "POST",
                        "PUT"
                    ]
                },
                "method": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "GET",
                        "DELETE"
                    ]
                },
                "role": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "handler.UserRole": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}